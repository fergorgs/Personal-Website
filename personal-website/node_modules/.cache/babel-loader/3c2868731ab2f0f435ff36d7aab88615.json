{"ast":null,"code":"var _jsxFileName = \"/home/fergorgs/Documentos/Personal Website/personal-website/src/components/BackDropImage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../styles/BackDropImage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction delay(delayInms) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(2);\n    }, delayInms);\n  });\n}\n\nasync function heightAnimation(startingHeight, targetHeight, heightSetter, time) {\n  const diff = targetHeight - currentHeight;\n  var currentHeight = startingHeight;\n  var count = 0;\n\n  while (currentHeight != targetHeight) {\n    count++; // if(count > 100)\n    // break;\n\n    if (targetHeight > currentHeight) {\n      heightSetter(currentHeight + 1);\n      currentHeight++;\n    } else {\n      heightSetter(currentHeight - 1);\n      currentHeight--;\n    }\n\n    await delay(10);\n  }\n}\n\nfunction BackDropImage() {\n  _s();\n\n  const [backDropHeight, setBackdropHeight] = useState(500);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"backdrop-img\",\n      style: {\n        height: backDropHeight\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => heightAnimation(backDropHeight, 100, setBackdropHeight, 10),\n      children: \"Trigger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BackDropImage, \"hv8kAcrmQqPR7v/BpO9PKFzoqFU=\");\n\n_c = BackDropImage;\nexport default BackDropImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BackDropImage\");","map":{"version":3,"sources":["/home/fergorgs/Documentos/Personal Website/personal-website/src/components/BackDropImage.js"],"names":["React","useState","delay","delayInms","Promise","resolve","setTimeout","heightAnimation","startingHeight","targetHeight","heightSetter","time","diff","currentHeight","count","BackDropImage","backDropHeight","setBackdropHeight","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,6BAAP;;;AAGA,SAASC,KAAT,CAAeC,SAAf,EAA0B;AACtB,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC5BC,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,OAAO,CAAC,CAAD,CAAP;AACD,KAFS,EAEPF,SAFO,CAAV;AAGD,GAJM,CAAP;AAKD;;AAEH,eAAeI,eAAf,CAA+BC,cAA/B,EAA+CC,YAA/C,EAA6DC,YAA7D,EAA2EC,IAA3E,EAAiF;AAE7E,QAAMC,IAAI,GAAGH,YAAY,GAAGI,aAA5B;AACA,MAAIA,aAAa,GAAGL,cAApB;AAEA,MAAIM,KAAK,GAAG,CAAZ;;AACA,SAAMD,aAAa,IAAIJ,YAAvB,EACA;AACIK,IAAAA,KAAK,GADT,CAEI;AACI;;AACJ,QAAGL,YAAY,GAAGI,aAAlB,EACA;AACIH,MAAAA,YAAY,CAACG,aAAa,GAAC,CAAf,CAAZ;AACAA,MAAAA,aAAa;AAChB,KAJD,MAOA;AACIH,MAAAA,YAAY,CAACG,aAAa,GAAC,CAAf,CAAZ;AACAA,MAAAA,aAAa;AAChB;;AACD,UAAMX,KAAK,CAAC,EAAD,CAAX;AACH;AACJ;;AAED,SAASa,aAAT,GAAwB;AAAA;;AAEpB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,GAAD,CAApD;AAEA,sBACI;AAAA,4BACA;AAAK,MAAA,EAAE,EAAC,cAAR;AAAuB,MAAA,KAAK,EAAE;AAACiB,QAAAA,MAAM,EAAEF;AAAT;AAA9B;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,OAAO,EAAE,MAAMT,eAAe,CAACS,cAAD,EAAiB,GAAjB,EAAsBC,iBAAtB,EAAyC,EAAzC,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAVQF,a;;KAAAA,a;AAYT,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport '../styles/BackDropImage.css'\n\n\nfunction delay(delayInms) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(2);\n      }, delayInms);\n    });\n  }\n\nasync function heightAnimation(startingHeight, targetHeight, heightSetter, time) {\n\n    const diff = targetHeight - currentHeight;\n    var currentHeight = startingHeight\n\n    var count = 0\n    while(currentHeight != targetHeight)\n    {\n        count++;\n        // if(count > 100)\n            // break;\n        if(targetHeight > currentHeight)\n        {\n            heightSetter(currentHeight+1);\n            currentHeight++;\n        }\n        \n        else\n        {\n            heightSetter(currentHeight-1)\n            currentHeight--;\n        }\n        await delay(10);\n    }\n}\n\nfunction BackDropImage(){\n\n    const [backDropHeight, setBackdropHeight] = useState(500);\n\n    return (\n        <div>\n        <div id=\"backdrop-img\" style={{height: backDropHeight}}></div>\n        <button onClick={() => heightAnimation(backDropHeight, 100, setBackdropHeight, 10)}>Trigger</button>\n        </div>\n    );\n}\n\nexport default BackDropImage;"]},"metadata":{},"sourceType":"module"}